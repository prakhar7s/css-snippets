{"version":3,"sources":["redux/features/features-reducer.action.types.js","redux/root.reducer.js","redux/features/features.reducer.js","components/footer/footer.component.jsx","redux/features/features.actions.js","components/header/header.component.jsx","assets/data/color-codes/color-codes.js","components/color-card/color-card.component.jsx","components/color-cards/color-cards.component.jsx","assets/data/css-tricks/css-tricks.js","components/css-trick-card/css-trick-card.jsx","components/css-tricks/css-tricks.jsx","components/landing-component/landing-component.component.jsx","routes/Routes.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["featureReducerActionTypes","TOGGLE_EDITOR_MODE","TOGGLE_HAMBURGER_MENU","rootReducer","combineReducers","require","features","default","INITIAL_STATE","darkMode","hamburgerMenu","featuresReducer","state","action","type","Footer","className","href","id","connect","hamburgerMenuValue","dispatch","toggleHamburgerMenu","to","onClick","style","display","colorCodes","colorId","colorOne","colorTwo","ColorCard","history","copyColorModal","setSelectedColor","colorCardRef","useRef","ref","background","push","current","ColorCards","props","useState","selectedColor","fontsCode","backgroundCode","copiedToast","map","colorCode","e","currentTarget","nextSibling","target","previousSibling","split","colors","backgroundCodeSnippet","fontCodeSnippet","trim","isFontCode","inp","document","createElement","setAttribute","body","append","select","execCommand","parentNode","removeChild","classList","add","setTimeout","remove","CSSTricksList","CSSTrickID","title","tags","code","toggleEditorMode","cssTrick","setShowCopied","showCopied","tag","index","line","appendChild","value","handleCopyBtn","CSSTricks","LandingComponent","Routes","path","component","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a22b59ef.chunk.js","sourcesContent":["const featureReducerActionTypes = {\n  TOGGLE_EDITOR_MODE: \"TOGGLE_EDITOR_MODE\",\n  TOGGLE_HAMBURGER_MENU: \"TOGGLE_HAMBURGER_MENU\",\n};\nexport default featureReducerActionTypes;\n","const { combineReducers } = require(\"redux\");\nconst { default: featuresReducer } = require(\"./features/features.reducer\");\n\nconst rootReducer = combineReducers({\n  features: featuresReducer,\n});\n\nexport default rootReducer;\n","const {\n  default: featureReducerActionTypes,\n} = require(\"./features-reducer.action.types\");\n\nconst INITIAL_STATE = {\n  darkMode: false,\n  hamburgerMenu: false,\n};\n\nconst featuresReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case featureReducerActionTypes.TOGGLE_EDITOR_MODE:\n      return {\n        ...state,\n        darkMode: !state.darkMode,\n      };\n\n    case featureReducerActionTypes.TOGGLE_HAMBURGER_MENU:\n      return {\n        ...state,\n        hamburgerMenu: !state.hamburgerMenu,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default featuresReducer;\n","import React from \"react\";\n\nimport \"./footer.styles.scss\";\n\n// ICONS\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport PinterestIcon from \"@material-ui/icons/Pinterest\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport RedditIcon from \"@material-ui/icons/Reddit\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <div className=\"social-media-links\">\n      <p>Follow us,</p>\n      <div className=\"links\">\n        <a href=\"#facebook\">\n          <FacebookIcon />\n        </a>\n        <a href=\"#instagram\">\n          <InstagramIcon />\n        </a>\n        <a href=\"#linkedin\">\n          <LinkedInIcon />\n        </a>\n        <a href=\"#pinterest\">\n          <PinterestIcon />\n        </a>\n        <a href=\"#twitter\">\n          <TwitterIcon />\n        </a>\n        <a href=\"#reddit\">\n          <RedditIcon />\n        </a>\n        <a href=\"#youtube\">\n          <YouTubeIcon />\n        </a>\n      </div>\n    </div>\n\n    <form id=\"contact-form\">\n      <p>Contact Us</p>\n      <input type=\"email\" />\n      <input type=\"text\" />\n      <button type=\"submit\">Send</button>\n    </form>\n  </div>\n);\n\nexport default Footer;\n","const {\n  default: featureReducerActionTypes,\n} = require(\"./features-reducer.action.types\");\n\nexport const toggleEditorMode = () => ({\n  type: featureReducerActionTypes.TOGGLE_EDITOR_MODE,\n});\n\nexport const toggleHamburgerMenu = () => ({\n  type: featureReducerActionTypes.TOGGLE_HAMBURGER_MENU,\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./header.styles.scss\";\n\n// ICONS\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\n\nimport { toggleHamburgerMenu } from \"../../redux/features/features.actions\";\nimport { connect } from \"react-redux\";\n\nconst Header = ({ toggleHamburgerMenu, hamburgerMenuValue }) => {\n  return (\n    <div className=\"header\">\n      <div className=\"app-name\">\n        <Link to=\"/css-snippets\">\n          <span className=\"codes first\">V</span>\n          <div className=\"main-icon\">\n            <ColorLensIcon />\n          </div>\n          <span className=\"codes\">&#47;</span>\n          <span className=\"codes last\">V</span>\n          <span>CSS Snippets</span>\n        </Link>\n      </div>\n      <div\n        onClick={() => toggleHamburgerMenu()}\n        className=\"hamburger-menu-icon\"\n      >\n        <MenuIcon />\n      </div>\n      <div\n        style={{ display: hamburgerMenuValue ? \"block\" : \"none\" }}\n        className=\"hamburger-menu-container\"\n      >\n        <div className=\"hamburger-menu\">\n          <div onClick={() => toggleHamburgerMenu()} className=\"close-btn\">\n            <CloseIcon />\n          </div>\n          <div className=\"hamb-links\">\n            <Link to=\"/css-snippets/gradient-colors\">Gradient Colors</Link>\n            <Link to=\"/css-snippets/css-tricks\">CSS Tricks</Link>\n            <Link to=\"/css-snippets/gradient-colors\">Learn More</Link>\n          </div>\n        </div>\n      </div>\n      <div className=\"links\">\n        <Link to=\"/css-snippets/gradient-colors\">Gradient Colors</Link>\n        <Link to=\"/css-snippets/css-tricks\">CSS Tricks</Link>\n        <Link to=\"/css-snippets/gradient-colors\">Learn More</Link>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  hamburgerMenuValue: state.features.hamburgerMenu,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleHamburgerMenu: () => dispatch(toggleHamburgerMenu()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","export const colorCodes = [\n  { colorId: \"color0001\", colorOne: \"#f40076\", colorTwo: \"#df98fa\" },\n  { colorId: \"color0002\", colorOne: \"#f06966\", colorTwo: \"#fad6a6\" },\n  { colorId: \"color00093\", colorOne: \"#ed7b84\", colorTwo: \"#9055ff\" },\n  { colorId: \"color0004\", colorOne: \"#402662\", colorTwo: \"#3900a6\" },\n  { colorId: \"color0005\", colorOne: \"#0b63f6\", colorTwo: \"#003cc5\" },\n  { colorId: \"color0006\", colorOne: \"#d6ff7f\", colorTwo: \"#00b3cc\" },\n  { colorId: \"color0007\", colorOne: \"#e233ff\", colorTwo: \"#ff6b00\" },\n  { colorId: \"color0008\", colorOne: \"#df98fa\", colorTwo: \"#9055ff\" },\n  { colorId: \"color00009\", colorOne: \"#ff0076\", colorTwo: \"#590fb7\" },\n  { colorId: \"color00010\", colorOne: \"#9055ff\", colorTwo: \"#13e2da\" },\n  { colorId: \"color00011\", colorOne: \"#f14658\", colorTwo: \"#dc2537\" },\n  { colorId: \"color00012\", colorOne: \"#f40076\", colorTwo: \"#342711\" },\n  { colorId: \"color00013\", colorOne: \"#000066\", colorTwo: \"#6699ff\" },\n  { colorId: \"color00014\", colorOne: \"#fa7cbb\", colorTwo: \"#f14658\" },\n  { colorId: \"color00015\", colorOne: \"#737dfe\", colorTwo: \"#ffcac9\" },\n  { colorId: \"color00016\", colorOne: \"#2f80ed\", colorTwo: \"#b2ffda\" },\n];\n","import React, { useRef } from \"react\";\n\nimport \"./color-card.styles.scss\";\n\nconst ColorCard = ({\n  colorId,\n  colorOne,\n  colorTwo,\n  history,\n  copyColorModal,\n  setSelectedColor,\n}) => {\n  const colorCardRef = useRef();\n\n  return (\n    <div ref={colorCardRef} className=\"color-card\">\n      <div\n        className=\"color-preview\"\n        style={{\n          background: `linear-gradient(40deg, ${colorOne}, ${colorTwo})`,\n        }}\n      ></div>\n      <div className=\"lower\">\n        <div className=\"colors\">\n          <h4>{colorOne} </h4>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          <span>_</span>\n          <h4>{colorTwo}</h4>\n        </div>\n        <button\n          className=\"copy-btn\"\n          onClick={() => {\n            history.push(`/css-snippets/gradient-colors/${colorId}`);\n            copyColorModal.current.style.display = \"flex\";\n\n            setSelectedColor(`${colorOne}:${colorTwo}`);\n          }}\n        >\n          copy\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorCard;\n","import React, { useRef, useState } from \"react\";\nimport { colorCodes } from \"../../assets/data/color-codes/color-codes\";\nimport ColorCard from \"../color-card/color-card.component\";\n\nimport \"./color-cards.styles.scss\";\n\n// icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\n\nconst ColorCards = (props) => {\n  const [selectedColor, setSelectedColor] = useState(\"\");\n\n  const copyColorModal = useRef();\n  const fontsCode = useRef();\n  const backgroundCode = useRef();\n\n  const copiedToast = useRef();\n\n  const copySelectedColor = () => {\n    const colors = selectedColor.split(\":\");\n\n    const backgroundCodeSnippet = `\n    background: linear-gradient(130deg, ${colors[0]}, ${colors[1]});\n    `;\n\n    const fontCodeSnippet = `\n    background: -webkit-repeating-linear-gradient(110deg, ${colors[0]},${colors[1]});\n    background-clip: text;\n    -webkit-text-fill-color: transparent;    \n    `.trim();\n\n    const isFontCode = fontsCode.current.style.display === \"flex\";\n\n    const inp = document.createElement(\"input\");\n    inp.setAttribute(\n      \"value\",\n      isFontCode ? fontCodeSnippet : backgroundCodeSnippet\n    );\n    document.body.append(inp);\n    inp.select();\n    document.execCommand(\"copy\");\n    inp.parentNode.removeChild(inp);\n\n    copiedToast.current.classList.add(\"show-toast\");\n\n    setTimeout(() => {\n      copiedToast.current.classList.remove(\"show-toast\");\n    }, 600);\n  };\n\n  return (\n    <div className=\"color-cards\">\n      <h1 className=\"heading\">Gradient Colors</h1>\n\n      <div className=\"previews\">\n        {colorCodes.map((colorCode) => (\n          <ColorCard\n            key={colorCode.colorId}\n            {...colorCode}\n            {...props}\n            copyColorModal={copyColorModal}\n            setSelectedColor={setSelectedColor}\n          />\n        ))}\n      </div>\n\n      <div ref={copyColorModal} className=\"copy-color-modal\">\n        <div className=\"modal-main\">\n          <div className=\"modal-main-nav\">\n            <span\n              className=\"active-nav\"\n              onClick={(e) => {\n                fontsCode.current.style.display = \"none\";\n                backgroundCode.current.style.display = \"flex\";\n\n                e.currentTarget.nextSibling.className = \"\";\n                e.target.className = \"active-nav\";\n              }}\n            >\n              Background\n            </span>\n            <span\n              onClick={(e) => {\n                backgroundCode.current.style.display = \"none\";\n                fontsCode.current.style.display = \"flex\";\n\n                e.currentTarget.previousSibling.className = \"\";\n                e.target.className = \"active-nav\";\n              }}\n            >\n              Fonts\n            </span>\n\n            <button\n              className=\"back-btn\"\n              onClick={() => {\n                props.history.push(\"/css-snippets/gradient-colors\");\n\n                copyColorModal.current.style.display = \"none\";\n              }}\n            >\n              <CloseIcon />\n            </button>\n          </div>\n          <div className=\"modal-main-content\">\n            <h2 className=\"heading\">CSS Code Snippet</h2>\n            <div ref={backgroundCode} className=\"modal-main-background\">\n              <p>{`background: linear-gradient(130deg, ${\n                selectedColor.split(\":\")[0]\n              }, ${selectedColor.split(\":\")[1]});`}</p>\n            </div>\n            <div\n              ref={fontsCode}\n              style={{ display: \"none\" }}\n              className=\"modal-main-font\"\n            >\n              <p>\n                {`\n               background: -webkit-repeating-linear-gradient(110deg, ${\n                 selectedColor.split(\":\")[0]\n               },\n              ${selectedColor.split(\":\")[1]});\n              `}\n              </p>\n              <p>{`background-clip: text;`}</p>\n              <p> {`-webkit-text-fill-color: transparent;`}</p>\n            </div>\n          </div>\n          <div className=\"modal-main-footer\">\n            <button onClick={copySelectedColor}>\n              <FileCopyOutlinedIcon />\n              <div ref={copiedToast} className=\"modal-copied-notification\">\n                Copied\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorCards;\n","const CSSTricksList = [\n  {\n    CSSTrickID: \"CSSTrick001\",\n    title:\n      \"Whenever text in a container overflows we can use this trick, it will put '.....' at the last of the text.\",\n    tags: [\n      \"ellipse\",\n      \"overflow\",\n      \"ellipse\",\n      \"overflow\",\n      \"ellipse\",\n      \"overflow\",\n      \"ellipse\",\n      \"overflow\",\n      \"ellipse\",\n      \"overflow\",\n      \"ellipse\",\n      \"overflow\",\n    ],\n    code: [\n      \"background-color: rgba(0, 0, 0, 0.5);\",\n      \"height: 100%;\",\n      \"width: 100px;\",\n    ],\n  },\n  {\n    CSSTrickID: \"CSSTrick002\",\n    title: \"CSS Trick 2\",\n    tags: [],\n    code: [\"background-color: rgba(0, 0, 0, 0.5);\", \"height: 100%;\", \"line2\"],\n  },\n  {\n    CSSTrickID: \"CSSTrick003\",\n    title: \"CSS Trick 3\",\n    tags: [],\n    code: [\"background-color: rgba(0, 0, 0, 0.5);\", \"height: 100%;\", \"line2\"],\n  },\n  {\n    CSSTrickID: \"CSSTrick004\",\n    title: \"CSS Trick 4\",\n    tags: [],\n    code: [\"background-color: rgba(0, 0, 0, 0.5);\", \"height: 100%;\", \"line2\"],\n  },\n];\n\nexport default CSSTricksList;\n","import React from \"react\";\n\nimport \"./css-trick-card.scss\";\n\n// ICONS\nimport Brightness6Icon from \"@material-ui/icons/Brightness6\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { connect } from \"react-redux\";\n\nimport { toggleEditorMode } from \"../../redux/features/features.actions\";\n\nconst CSSTrickCard = (props) => {\n  const { title, code, tags } = props.cssTrick;\n  const { setShowCopied, showCopied, darkMode, toggleEditorMode } = props;\n\n  const handleCopyBtn = () => {\n    if (showCopied === true) {\n      setShowCopied(false);\n      setTimeout(() => {\n        setShowCopied(true);\n      }, 200);\n    } else {\n      setShowCopied(true);\n    }\n\n    //COPY Logic\n    const inp = document.createElement(\"textarea\");\n    document.body.appendChild(inp);\n    code.map((line) => (inp.value += line + \"\\n\"));\n\n    inp.select();\n    document.execCommand(\"copy\");\n    inp.parentNode.removeChild(inp);\n\n    setTimeout(() => {\n      setShowCopied(false);\n    }, 8000);\n  };\n\n  return (\n    <div className=\"css-trick-card\">\n      <div className=\"trick-title\">{title}</div>\n      <div className=\"tags\">\n        {tags.map((tag, index) => (\n          <span className=\"tag\" key={index}>\n            {tag}\n          </span>\n        ))}\n      </div>\n      <div className={`code-container${darkMode ? \" dark-mode\" : \"\"}`}>\n        <div className={`code`}>\n          {code.map((line, index) => (\n            <p key={index}>{line}</p>\n          ))}\n        </div>\n        <div className=\"btns\">\n          <div onClick={() => toggleEditorMode()} className=\"mode-btn\">\n            <Brightness6Icon />\n          </div>\n          <div onClick={() => handleCopyBtn()} className=\"copy-btn\">\n            <FileCopyOutlinedIcon />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  darkMode: state.features.darkMode,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleEditorMode: () => dispatch(toggleEditorMode()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CSSTrickCard);\n","import React, { useState } from \"react\";\nimport CSSTricksList from \"../../assets/data/css-tricks/css-tricks\";\nimport CSSTrickCard from \"../css-trick-card/css-trick-card\";\n\nimport \"./css-tricks.scss\";\n\n//ICONS\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\n\nconst CSSTricks = () => {\n  const [showCopied, setShowCopied] = useState(false);\n  return (\n    <div className=\"css-tricks\">\n      <h1>In this section, we will going to see some cool CSS tricks,</h1>\n      {CSSTricksList.map((cssTrick) => (\n        <CSSTrickCard\n          key={cssTrick.CSSTrickID}\n          setShowCopied={setShowCopied}\n          showCopied={showCopied}\n          cssTrick={cssTrick}\n        />\n      ))}\n      {showCopied ? (\n        <div className=\"copied-msg\">\n          <span>CSS Code Copied to clipboard!</span>\n          <div\n            onClick={() => setShowCopied(false)}\n            className=\"close-copied-msg\"\n          >\n            <CloseOutlinedIcon />\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CSSTricks;\n","import React from \"react\";\n\nimport \"./landing-component.styles.scss\";\n\nconst LandingComponent = () => (\n  <div className=\"landing-component\">Welcome!</div>\n);\n\nexport default LandingComponent;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ColorCards from \"../components/color-cards/color-cards.component\";\nimport CSSTricks from \"../components/css-tricks/css-tricks\";\nimport LandingComponent from \"../components/landing-component/landing-component.component\";\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/css-snippets\" component={LandingComponent} exact />\n    <Route path=\"/css-snippets/gradient-colors\" component={ColorCards} />\n    <Route path=\"/css-snippets/css-tricks\" exact component={CSSTricks} />\n  </Switch>\n);\n\nexport default Routes;\n","import \"./App.css\";\nimport Footer from \"./components/footer/footer.component\";\nimport Header from \"./components/header/header.component\";\nimport Routes from \"./routes/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Routes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\n\nconst { default: rootReducer } = require(\"./root.reducer\");\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}