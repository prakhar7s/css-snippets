{"version":3,"sources":["redux/features/features-reducer.action.types.js","redux/root.reducer.js","redux/features/features.reducer.js","components/footer/footer.component.jsx","redux/features/features.actions.js","components/header/header.component.jsx","assets/data/color-codes/color-codes.js","components/color-card/color-card.component.jsx","components/color-cards/color-cards.component.jsx","assets/data/css-tricks/css-tricks.js","components/css-trick-card/css-trick-card.jsx","components/css-tricks/css-tricks.jsx","components/landing-component/landing-component.component.jsx","routes/Routes.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["featureReducerActionTypes","TOGGLE_EDITOR_MODE","TOGGLE_HAMBURGER_MENU","rootReducer","combineReducers","require","features","default","INITIAL_STATE","darkMode","hamburgerMenu","featuresReducer","state","action","type","Footer","className","href","id","placeholder","connect","hamburgerMenuValue","dispatch","toggleHamburgerMenu","to","onClick","style","display","colorCodes","colorId","colorOne","colorTwo","ColorCard","history","copyColorModal","setSelectedColor","colorCardRef","useRef","ref","background","push","current","ColorCards","props","useState","selectedColor","fontsCode","backgroundCode","copiedToast","map","colorCode","e","currentTarget","nextSibling","target","previousSibling","split","colors","backgroundCodeSnippet","fontCodeSnippet","trim","isFontCode","inp","document","createElement","setAttribute","body","append","select","execCommand","parentNode","removeChild","classList","add","setTimeout","remove","CSSTricksList","CSSTrickID","title","tags","code","toggleEditorMode","cssTrick","setShowCopied","showCopied","tag","index","line","appendChild","value","handleCopyBtn","CSSTricks","LandingComponent","Routes","path","component","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"+GAAA,OAIeA,UAJmB,CAChCC,mBAAoB,qBACpBC,sBAAuB,0B,wOCCnBC,GAAcC,EAHQC,EAAQ,IAA5BD,iBAG4B,CAClCE,SAHmCD,EAAQ,IAArCE,UAMOJ,a,mDCNJH,EACPK,EAAQ,IADVE,QAGIC,EAAgB,CACpBC,UAAU,EACVC,eAAe,GAsBFC,UAnBS,WAAoC,IAAnCC,EAAkC,uDAA1BJ,EAAeK,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKd,EAA0BC,mBAC7B,OAAO,2BACFW,GADL,IAEEH,UAAWG,EAAMH,WAGrB,KAAKT,EAA0BE,sBAC7B,OAAO,2BACFU,GADL,IAEEF,eAAgBE,EAAMF,gBAG1B,QACE,OAAOE,K,8NC2BEG,EAtCA,kBACb,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,2CACA,sBAAKA,UAAU,QAAf,UACE,mBAAGC,KAAK,YAAR,SACE,cAAC,IAAD,MAEF,mBAAGA,KAAK,aAAR,SACE,cAAC,IAAD,MAEF,mBAAGA,KAAK,YAAR,SACE,cAAC,IAAD,MAEF,mBAAGA,KAAK,aAAR,SACE,cAAC,IAAD,MAEF,mBAAGA,KAAK,WAAR,SACE,cAAC,IAAD,MAEF,mBAAGA,KAAK,UAAR,SACE,cAAC,IAAD,MAEF,mBAAGA,KAAK,WAAR,SACE,cAAC,IAAD,YAKN,uBAAMC,GAAG,eAAT,UACE,iDACA,uBAAOJ,KAAK,QAAQK,YAAY,eAChC,uBAAOL,KAAK,OAAOK,YAAY,aAC/B,wBAAQL,KAAK,SAAb,yB,mEC7CKd,EACPK,EAAQ,IADVE,Q,QCgEaa,eARS,SAACR,GAAD,MAAY,CAClCS,mBAAoBT,EAAMN,SAASI,kBAGV,SAACY,GAAD,MAAe,CACxCC,oBAAqB,kBAAMD,EDtDa,CACxCR,KAAMd,EAA0BE,4BCwDnBkB,EAnDA,SAAC,GAAiD,IAA/CG,EAA8C,EAA9CA,oBAAqBF,EAAyB,EAAzBA,mBACrC,OACE,sBAAKL,UAAU,SAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAAC,IAAD,CAAMQ,GAAG,gBAAT,UACE,sBAAMR,UAAU,cAAhB,eACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,MAEF,sBAAMA,UAAU,QAAhB,eACA,sBAAMA,UAAU,aAAhB,oBAGJ,qBACES,QAAS,kBAAMF,KACfP,UAAU,sBAFZ,SAIE,cAAC,IAAD,MAEF,qBACEU,MAAO,CAAEC,QAASN,EAAqB,QAAU,QACjDL,UAAU,2BAFZ,SAIE,sBAAKA,UAAU,iBAAf,UACE,qBAAKS,QAAS,kBAAMF,KAAuBP,UAAU,YAArD,SACE,cAAC,IAAD,MAEF,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CAAMQ,GAAG,gCAAT,6BACA,cAAC,IAAD,CAAMA,GAAG,2BAAT,kCAKN,sBAAKR,UAAU,QAAf,UACE,cAAC,IAAD,CAAMQ,GAAG,gCAAT,6BACA,cAAC,IAAD,CAAMA,GAAG,2BAAT,mC,uBClDKI,EAAa,CACxB,CAAEC,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,YAAaC,SAAU,UAAWC,SAAU,WACvD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,WACxD,CAAEF,QAAS,aAAcC,SAAU,UAAWC,SAAU,YC6B3CC,G,MAzCG,SAAC,GAOZ,IANLH,EAMI,EANJA,QACAC,EAKI,EALJA,SACAC,EAII,EAJJA,SACAE,EAGI,EAHJA,QACAC,EAEI,EAFJA,eACAC,EACI,EADJA,iBAEMC,EAAeC,mBAErB,OACE,sBAAKC,IAAKF,EAAcpB,UAAU,aAAlC,UACE,qBACEA,UAAU,gBACVU,MAAO,CACLa,WAAW,0BAAD,OAA4BT,EAA5B,aAAyCC,EAAzC,QAGd,sBAAKf,UAAU,QAAf,UACE,sBAAKA,UAAU,SAAf,UACE,+BAAKc,EAAL,OADF,uBAGE,qCACA,6BAAKC,OAEP,wBACEf,UAAU,WACVS,QAAS,WACPQ,EAAQO,KAAR,wCAA8CX,IAC9CK,EAAeO,QAAQf,MAAMC,QAAU,OAEvCQ,EAAiB,GAAD,OAAIL,EAAJ,YAAgBC,KANpC,0B,yBCkHOW,EArII,SAACC,GAAW,IAAD,EACcC,mBAAS,IADvB,mBACrBC,EADqB,KACNV,EADM,KAGtBD,EAAiBG,mBACjBS,EAAYT,mBACZU,EAAiBV,mBAEjBW,EAAcX,mBAkCpB,OACE,sBAAKrB,UAAU,cAAf,UACE,oBAAIA,UAAU,UAAd,6BAEA,qBAAKA,UAAU,WAAf,SACGY,EAAWqB,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,uCAEMA,GACAP,GAHN,IAIET,eAAgBA,EAChBC,iBAAkBA,IAJbe,EAAUrB,cASrB,qBAAKS,IAAKJ,EAAgBlB,UAAU,mBAApC,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBACEA,UAAU,aACVS,QAAS,SAAC0B,GACRL,EAAUL,QAAQf,MAAMC,QAAU,OAClCoB,EAAeN,QAAQf,MAAMC,QAAU,OAEvCwB,EAAEC,cAAcC,YAAYrC,UAAY,GACxCmC,EAAEG,OAAOtC,UAAY,cAPzB,wBAYA,sBACES,QAAS,SAAC0B,GACRJ,EAAeN,QAAQf,MAAMC,QAAU,OACvCmB,EAAUL,QAAQf,MAAMC,QAAU,OAElCwB,EAAEC,cAAcG,gBAAgBvC,UAAY,GAC5CmC,EAAEG,OAAOtC,UAAY,cANzB,mBAYA,wBACEA,UAAU,WACVS,QAAS,WACPkB,EAAMV,QAAQO,KAAK,iCAEnBN,EAAeO,QAAQf,MAAMC,QAAU,QAL3C,SAQE,cAAC,IAAD,SAGJ,sBAAKX,UAAU,qBAAf,UACE,oBAAIA,UAAU,UAAd,8BACA,qBAAKsB,IAAKS,EAAgB/B,UAAU,wBAApC,SACE,0EACE6B,EAAcW,MAAM,KAAK,GAD3B,aAEKX,EAAcW,MAAM,KAAK,GAF9B,UAIF,sBACElB,IAAKQ,EACLpB,MAAO,CAAEC,QAAS,QAClBX,UAAU,kBAHZ,UAKE,6GAGG6B,EAAcW,MAAM,KAAK,GAH5B,4BAKEX,EAAcW,MAAM,KAAK,GAL3B,wBAQA,uDACA,mFAGJ,qBAAKxC,UAAU,oBAAf,SACE,yBAAQS,QA/GQ,WACxB,IAAMgC,EAASZ,EAAcW,MAAM,KAE7BE,EAAqB,oDACWD,EAAO,GADlB,aACyBA,EAAO,GADhC,YAIrBE,EAAkB,sEACgCF,EAAO,GADvC,YAC6CA,EAAO,GADpD,uFAItBG,OAEIC,EAAiD,SAApCf,EAAUL,QAAQf,MAAMC,QAErCmC,EAAMC,SAASC,cAAc,SACnCF,EAAIG,aACF,QACAJ,EAAaF,EAAkBD,GAEjCK,SAASG,KAAKC,OAAOL,GACrBA,EAAIM,SACJL,SAASM,YAAY,QACrBP,EAAIQ,WAAWC,YAAYT,GAE3Bd,EAAYP,QAAQ+B,UAAUC,IAAI,cAElCC,YAAW,WACT1B,EAAYP,QAAQ+B,UAAUG,OAAO,gBACpC,MAkFK,UACE,cAAC,IAAD,IACA,qBAAKrC,IAAKU,EAAahC,UAAU,4BAAjC,kCC/GC4D,EArBO,CACpB,CACEC,WAAY,cACZC,MACE,2GACFC,KAAM,CAAC,WAAY,QACnBC,KAAM,CACJ,wBACA,yBACA,gCACA,sBAGJ,CACEH,WAAY,cACZC,MAAO,6CACPC,KAAM,CAAC,SAAU,aACjBC,KAAM,CAAC,iBAAkB,0B,yBC2Dd5D,eARS,SAACR,GAAD,MAAY,CAClCH,SAAUG,EAAMN,SAASG,aAGA,SAACa,GAAD,MAAe,CACxC2D,iBAAkB,kBAAM3D,ENrEa,CACrCR,KAAMd,EAA0BC,yBMuEnBmB,EAjEM,SAACuB,GAAW,IAAD,EACAA,EAAMuC,SAA5BJ,EADsB,EACtBA,MAAOE,EADe,EACfA,KAAMD,EADS,EACTA,KACbI,EAA0DxC,EAA1DwC,cAAeC,EAA2CzC,EAA3CyC,WAAY3E,EAA+BkC,EAA/BlC,SAAUwE,EAAqBtC,EAArBsC,iBA0B7C,OACE,sBAAKjE,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SAA8B8D,IAC9B,qBAAK9D,UAAU,OAAf,SACG+D,EAAK9B,KAAI,SAACoC,EAAKC,GAAN,OACR,sBAAMtE,UAAU,MAAhB,SACGqE,GADwBC,QAK/B,sBAAKtE,UAAS,wBAAmBP,EAAW,aAAe,IAA3D,UACE,qBAAKO,UAAS,OAAd,SACGgE,EAAK/B,KAAI,SAACsC,EAAMD,GAAP,OACR,4BAAgBC,GAARD,QAGZ,sBAAKtE,UAAU,OAAf,UACE,qBAAKS,QAAS,kBAAMwD,KAAoBjE,UAAU,WAAlD,SACE,cAAC,IAAD,MAEF,qBAAKS,QAAS,kBA5CA,YACD,IAAf2D,GACFD,GAAc,GACdT,YAAW,WACTS,GAAc,KACb,MAEHA,GAAc,GAIhB,IAAMrB,EAAMC,SAASC,cAAc,YACnCD,SAASG,KAAKsB,YAAY1B,GAC1BkB,EAAK/B,KAAI,SAACsC,GAAD,OAAWzB,EAAI2B,OAASF,EAAO,QAExCzB,EAAIM,SACJL,SAASM,YAAY,QACrBP,EAAIQ,WAAWC,YAAYT,GAE3BY,YAAW,WACTS,GAAc,KACb,MAuBuBO,IAAiB1E,UAAU,WAA/C,SACE,cAAC,IAAD,kB,yBCvBG2E,EA5BG,WAAO,IAAD,EACc/C,oBAAS,GADvB,mBACfwC,EADe,KACHD,EADG,KAEtB,OACE,sBAAKnE,UAAU,aAAf,UACE,6FACC4D,EAAc3B,KAAI,SAACiC,GAAD,OACjB,cAAC,EAAD,CAEEC,cAAeA,EACfC,WAAYA,EACZF,SAAUA,GAHLA,EAASL,eAMjBO,EACC,sBAAKpE,UAAU,aAAf,UACE,iEACA,qBACES,QAAS,kBAAM0D,GAAc,IAC7BnE,UAAU,mBAFZ,SAIE,cAAC,IAAD,SAGF,SChBK4E,G,MAXU,kBACvB,sBAAK5E,UAAU,oBAAf,UACE,2DACA,4DACA,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMQ,GAAG,gCAAT,6BACA,cAAC,IAAD,CAAMA,GAAG,2BAAT,kCCISqE,EARA,kBACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,gBAAgBC,UAAWH,EAAkBI,OAAK,IAC9D,cAAC,IAAD,CAAOF,KAAK,gCAAgCC,UAAWrD,IACvD,cAAC,IAAD,CAAOoD,KAAK,2BAA2BE,OAAK,EAACD,UAAWJ,QCI7CM,MAVf,WACE,OACE,sBAAKjF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCLGhG,EAAgBE,EAAQ,IAAjCE,QAIOoG,GAFDC,sBAAYzG,GCK1B0G,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,UAINhD,SAASiD,eAAe,SAM1Bd,M","file":"static/js/main.7c8a3e11.chunk.js","sourcesContent":["const featureReducerActionTypes = {\r\n  TOGGLE_EDITOR_MODE: \"TOGGLE_EDITOR_MODE\",\r\n  TOGGLE_HAMBURGER_MENU: \"TOGGLE_HAMBURGER_MENU\",\r\n};\r\nexport default featureReducerActionTypes;\r\n","const { combineReducers } = require(\"redux\");\r\nconst { default: featuresReducer } = require(\"./features/features.reducer\");\r\n\r\nconst rootReducer = combineReducers({\r\n  features: featuresReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","const {\r\n  default: featureReducerActionTypes,\r\n} = require(\"./features-reducer.action.types\");\r\n\r\nconst INITIAL_STATE = {\r\n  darkMode: false,\r\n  hamburgerMenu: false,\r\n};\r\n\r\nconst featuresReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case featureReducerActionTypes.TOGGLE_EDITOR_MODE:\r\n      return {\r\n        ...state,\r\n        darkMode: !state.darkMode,\r\n      };\r\n\r\n    case featureReducerActionTypes.TOGGLE_HAMBURGER_MENU:\r\n      return {\r\n        ...state,\r\n        hamburgerMenu: !state.hamburgerMenu,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default featuresReducer;\r\n","import React from \"react\";\r\n\r\nimport \"./footer.styles.scss\";\r\n\r\n// ICONS\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport PinterestIcon from \"@material-ui/icons/Pinterest\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport RedditIcon from \"@material-ui/icons/Reddit\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <div className=\"social-media-links\">\r\n      <p>Follow us,</p>\r\n      <div className=\"links\">\r\n        <a href=\"#facebook\">\r\n          <FacebookIcon />\r\n        </a>\r\n        <a href=\"#instagram\">\r\n          <InstagramIcon />\r\n        </a>\r\n        <a href=\"#linkedin\">\r\n          <LinkedInIcon />\r\n        </a>\r\n        <a href=\"#pinterest\">\r\n          <PinterestIcon />\r\n        </a>\r\n        <a href=\"#twitter\">\r\n          <TwitterIcon />\r\n        </a>\r\n        <a href=\"#reddit\">\r\n          <RedditIcon />\r\n        </a>\r\n        <a href=\"#youtube\">\r\n          <YouTubeIcon />\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    <form id=\"contact-form\">\r\n      <p>Give us feedback</p>\r\n      <input type=\"email\" placeholder=\"your email\" />\r\n      <input type=\"text\" placeholder=\"feedback\" />\r\n      <button type=\"submit\">Send</button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","const {\r\n  default: featureReducerActionTypes,\r\n} = require(\"./features-reducer.action.types\");\r\n\r\nexport const toggleEditorMode = () => ({\r\n  type: featureReducerActionTypes.TOGGLE_EDITOR_MODE,\r\n});\r\n\r\nexport const toggleHamburgerMenu = () => ({\r\n  type: featureReducerActionTypes.TOGGLE_HAMBURGER_MENU,\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./header.styles.scss\";\r\n\r\n// ICONS\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\r\n\r\nimport { toggleHamburgerMenu } from \"../../redux/features/features.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Header = ({ toggleHamburgerMenu, hamburgerMenuValue }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"app-name\">\r\n        <Link to=\"/css-snippets\">\r\n          <span className=\"codes first\">V</span>\r\n          <div className=\"main-icon\">\r\n            <ColorLensIcon />\r\n          </div>\r\n          <span className=\"codes\">&#47;</span>\r\n          <span className=\"codes last\">V</span>\r\n        </Link>\r\n      </div>\r\n      <div\r\n        onClick={() => toggleHamburgerMenu()}\r\n        className=\"hamburger-menu-icon\"\r\n      >\r\n        <MenuIcon />\r\n      </div>\r\n      <div\r\n        style={{ display: hamburgerMenuValue ? \"block\" : \"none\" }}\r\n        className=\"hamburger-menu-container\"\r\n      >\r\n        <div className=\"hamburger-menu\">\r\n          <div onClick={() => toggleHamburgerMenu()} className=\"close-btn\">\r\n            <CloseIcon />\r\n          </div>\r\n          <div className=\"hamb-links\">\r\n            <Link to=\"/css-snippets/gradient-colors\">Gradient Colors</Link>\r\n            <Link to=\"/css-snippets/css-tricks\">CSS Snippets</Link>\r\n            {/* <Link to=\"/css-snippets/gradient-colors\">Learn More</Link> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"links\">\r\n        <Link to=\"/css-snippets/gradient-colors\">Gradient Colors</Link>\r\n        <Link to=\"/css-snippets/css-tricks\">CSS Snippets</Link>\r\n        {/* <Link to=\"/css-snippets/gradient-colors\">Learn More</Link> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hamburgerMenuValue: state.features.hamburgerMenu,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleHamburgerMenu: () => dispatch(toggleHamburgerMenu()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","export const colorCodes = [\r\n  { colorId: \"color0001\", colorOne: \"#f40076\", colorTwo: \"#df98fa\" },\r\n  { colorId: \"color0002\", colorOne: \"#f06966\", colorTwo: \"#fad6a6\" },\r\n  { colorId: \"color00093\", colorOne: \"#ed7b84\", colorTwo: \"#9055ff\" },\r\n  { colorId: \"color0004\", colorOne: \"#402662\", colorTwo: \"#3900a6\" },\r\n  { colorId: \"color0005\", colorOne: \"#0b63f6\", colorTwo: \"#003cc5\" },\r\n  { colorId: \"color0006\", colorOne: \"#d6ff7f\", colorTwo: \"#00b3cc\" },\r\n  { colorId: \"color0007\", colorOne: \"#e233ff\", colorTwo: \"#ff6b00\" },\r\n  { colorId: \"color0008\", colorOne: \"#df98fa\", colorTwo: \"#9055ff\" },\r\n  { colorId: \"color00009\", colorOne: \"#ff0076\", colorTwo: \"#590fb7\" },\r\n  { colorId: \"color00010\", colorOne: \"#9055ff\", colorTwo: \"#13e2da\" },\r\n  { colorId: \"color00011\", colorOne: \"#f14658\", colorTwo: \"#dc2537\" },\r\n  { colorId: \"color00012\", colorOne: \"#f40076\", colorTwo: \"#342711\" },\r\n  { colorId: \"color00013\", colorOne: \"#000066\", colorTwo: \"#6699ff\" },\r\n  { colorId: \"color00014\", colorOne: \"#fa7cbb\", colorTwo: \"#f14658\" },\r\n  { colorId: \"color00015\", colorOne: \"#737dfe\", colorTwo: \"#ffcac9\" },\r\n  { colorId: \"color00016\", colorOne: \"#2f80ed\", colorTwo: \"#b2ffda\" },\r\n];\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./color-card.styles.scss\";\r\n\r\nconst ColorCard = ({\r\n  colorId,\r\n  colorOne,\r\n  colorTwo,\r\n  history,\r\n  copyColorModal,\r\n  setSelectedColor,\r\n}) => {\r\n  const colorCardRef = useRef();\r\n\r\n  return (\r\n    <div ref={colorCardRef} className=\"color-card\">\r\n      <div\r\n        className=\"color-preview\"\r\n        style={{\r\n          background: `linear-gradient(40deg, ${colorOne}, ${colorTwo})`,\r\n        }}\r\n      ></div>\r\n      <div className=\"lower\">\r\n        <div className=\"colors\">\r\n          <h4>{colorOne} </h4>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span>_</span>\r\n          <h4>{colorTwo}</h4>\r\n        </div>\r\n        <button\r\n          className=\"copy-btn\"\r\n          onClick={() => {\r\n            history.push(`/css-snippets/gradient-colors/${colorId}`);\r\n            copyColorModal.current.style.display = \"flex\";\r\n\r\n            setSelectedColor(`${colorOne}:${colorTwo}`);\r\n          }}\r\n        >\r\n          copy\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { colorCodes } from \"../../assets/data/color-codes/color-codes\";\r\nimport ColorCard from \"../color-card/color-card.component\";\r\n\r\nimport \"./color-cards.styles.scss\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\n\r\nconst ColorCards = (props) => {\r\n  const [selectedColor, setSelectedColor] = useState(\"\");\r\n\r\n  const copyColorModal = useRef();\r\n  const fontsCode = useRef();\r\n  const backgroundCode = useRef();\r\n\r\n  const copiedToast = useRef();\r\n\r\n  const copySelectedColor = () => {\r\n    const colors = selectedColor.split(\":\");\r\n\r\n    const backgroundCodeSnippet = `\r\n    background: linear-gradient(130deg, ${colors[0]}, ${colors[1]});\r\n    `;\r\n\r\n    const fontCodeSnippet = `\r\n    background: -webkit-repeating-linear-gradient(110deg, ${colors[0]},${colors[1]});\r\n    background-clip: text;\r\n    -webkit-text-fill-color: transparent;    \r\n    `.trim();\r\n\r\n    const isFontCode = fontsCode.current.style.display === \"flex\";\r\n\r\n    const inp = document.createElement(\"input\");\r\n    inp.setAttribute(\r\n      \"value\",\r\n      isFontCode ? fontCodeSnippet : backgroundCodeSnippet\r\n    );\r\n    document.body.append(inp);\r\n    inp.select();\r\n    document.execCommand(\"copy\");\r\n    inp.parentNode.removeChild(inp);\r\n\r\n    copiedToast.current.classList.add(\"show-toast\");\r\n\r\n    setTimeout(() => {\r\n      copiedToast.current.classList.remove(\"show-toast\");\r\n    }, 600);\r\n  };\r\n\r\n  return (\r\n    <div className=\"color-cards\">\r\n      <h1 className=\"heading\">Gradient Colors</h1>\r\n\r\n      <div className=\"previews\">\r\n        {colorCodes.map((colorCode) => (\r\n          <ColorCard\r\n            key={colorCode.colorId}\r\n            {...colorCode}\r\n            {...props}\r\n            copyColorModal={copyColorModal}\r\n            setSelectedColor={setSelectedColor}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div ref={copyColorModal} className=\"copy-color-modal\">\r\n        <div className=\"modal-main\">\r\n          <div className=\"modal-main-nav\">\r\n            <span\r\n              className=\"active-nav\"\r\n              onClick={(e) => {\r\n                fontsCode.current.style.display = \"none\";\r\n                backgroundCode.current.style.display = \"flex\";\r\n\r\n                e.currentTarget.nextSibling.className = \"\";\r\n                e.target.className = \"active-nav\";\r\n              }}\r\n            >\r\n              Background\r\n            </span>\r\n            <span\r\n              onClick={(e) => {\r\n                backgroundCode.current.style.display = \"none\";\r\n                fontsCode.current.style.display = \"flex\";\r\n\r\n                e.currentTarget.previousSibling.className = \"\";\r\n                e.target.className = \"active-nav\";\r\n              }}\r\n            >\r\n              Fonts\r\n            </span>\r\n\r\n            <button\r\n              className=\"back-btn\"\r\n              onClick={() => {\r\n                props.history.push(\"/css-snippets/gradient-colors\");\r\n\r\n                copyColorModal.current.style.display = \"none\";\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-main-content\">\r\n            <h2 className=\"heading\">CSS Code Snippet</h2>\r\n            <div ref={backgroundCode} className=\"modal-main-background\">\r\n              <p>{`background: linear-gradient(130deg, ${\r\n                selectedColor.split(\":\")[0]\r\n              }, ${selectedColor.split(\":\")[1]});`}</p>\r\n            </div>\r\n            <div\r\n              ref={fontsCode}\r\n              style={{ display: \"none\" }}\r\n              className=\"modal-main-font\"\r\n            >\r\n              <p>\r\n                {`\r\n               background: -webkit-repeating-linear-gradient(110deg, ${\r\n                 selectedColor.split(\":\")[0]\r\n               },\r\n              ${selectedColor.split(\":\")[1]});\r\n              `}\r\n              </p>\r\n              <p>{`background-clip: text;`}</p>\r\n              <p> {`-webkit-text-fill-color: transparent;`}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-main-footer\">\r\n            <button onClick={copySelectedColor}>\r\n              <FileCopyOutlinedIcon />\r\n              <div ref={copiedToast} className=\"modal-copied-notification\">\r\n                Copied\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCards;\r\n","const CSSTricksList = [\r\n  {\r\n    CSSTrickID: \"CSSTrick001\",\r\n    title:\r\n      \"Whenever text in a container overflows we can use this trick, it will put '...' at the last of the text.\",\r\n    tags: [\"overflow\", \"text\"],\r\n    code: [\r\n      \"display: -webkit-box;\",\r\n      \"-webkit-line-clamp: 3;\",\r\n      \"-webkit-box-orient: vertical;\",\r\n      \"overflow: hidden;\",\r\n    ],\r\n  },\r\n  {\r\n    CSSTrickID: \"CSSTrick002\",\r\n    title: \"This trick center the element inside a div\",\r\n    tags: [\"center\", \"container\"],\r\n    code: [\"display: grid;\", \"place-items: center;\"],\r\n  },\r\n];\r\n\r\nexport default CSSTricksList;\r\n","import React from \"react\";\r\n\r\nimport \"./css-trick-card.scss\";\r\n\r\n// ICONS\r\nimport Brightness6Icon from \"@material-ui/icons/Brightness6\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleEditorMode } from \"../../redux/features/features.actions\";\r\n\r\nconst CSSTrickCard = (props) => {\r\n  const { title, code, tags } = props.cssTrick;\r\n  const { setShowCopied, showCopied, darkMode, toggleEditorMode } = props;\r\n\r\n  const handleCopyBtn = () => {\r\n    if (showCopied === true) {\r\n      setShowCopied(false);\r\n      setTimeout(() => {\r\n        setShowCopied(true);\r\n      }, 200);\r\n    } else {\r\n      setShowCopied(true);\r\n    }\r\n\r\n    //COPY Logic\r\n    const inp = document.createElement(\"textarea\");\r\n    document.body.appendChild(inp);\r\n    code.map((line) => (inp.value += line + \"\\n\"));\r\n\r\n    inp.select();\r\n    document.execCommand(\"copy\");\r\n    inp.parentNode.removeChild(inp);\r\n\r\n    setTimeout(() => {\r\n      setShowCopied(false);\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"css-trick-card\">\r\n      <div className=\"trick-title\">{title}</div>\r\n      <div className=\"tags\">\r\n        {tags.map((tag, index) => (\r\n          <span className=\"tag\" key={index}>\r\n            {tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <div className={`code-container${darkMode ? \" dark-mode\" : \"\"}`}>\r\n        <div className={`code`}>\r\n          {code.map((line, index) => (\r\n            <p key={index}>{line}</p>\r\n          ))}\r\n        </div>\r\n        <div className=\"btns\">\r\n          <div onClick={() => toggleEditorMode()} className=\"mode-btn\">\r\n            <Brightness6Icon />\r\n          </div>\r\n          <div onClick={() => handleCopyBtn()} className=\"copy-btn\">\r\n            <FileCopyOutlinedIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  darkMode: state.features.darkMode,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleEditorMode: () => dispatch(toggleEditorMode()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CSSTrickCard);\r\n","import React, { useState } from \"react\";\r\nimport CSSTricksList from \"../../assets/data/css-tricks/css-tricks\";\r\nimport CSSTrickCard from \"../css-trick-card/css-trick-card\";\r\n\r\nimport \"./css-tricks.scss\";\r\n\r\n//ICONS\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\n\r\nconst CSSTricks = () => {\r\n  const [showCopied, setShowCopied] = useState(false);\r\n  return (\r\n    <div className=\"css-tricks\">\r\n      <h1>In this section, we will going to see some cool CSS tricks,</h1>\r\n      {CSSTricksList.map((cssTrick) => (\r\n        <CSSTrickCard\r\n          key={cssTrick.CSSTrickID}\r\n          setShowCopied={setShowCopied}\r\n          showCopied={showCopied}\r\n          cssTrick={cssTrick}\r\n        />\r\n      ))}\r\n      {showCopied ? (\r\n        <div className=\"copied-msg\">\r\n          <span>CSS Code Copied to clipboard!</span>\r\n          <div\r\n            onClick={() => setShowCopied(false)}\r\n            className=\"close-copied-msg\"\r\n          >\r\n            <CloseOutlinedIcon />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSSTricks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./landing-component.styles.scss\";\r\n\r\nconst LandingComponent = () => (\r\n  <div className=\"landing-component\">\r\n    <h1>Welcome to CSS Snippets! </h1>\r\n    <h2>Try our services for free.</h2>\r\n    <div className=\"services\">\r\n      <Link to=\"/css-snippets/gradient-colors\">Gradient Colors</Link>\r\n      <Link to=\"/css-snippets/css-tricks\">CSS Snippets</Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LandingComponent;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport ColorCards from \"../components/color-cards/color-cards.component\";\r\nimport CSSTricks from \"../components/css-tricks/css-tricks\";\r\nimport LandingComponent from \"../components/landing-component/landing-component.component\";\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route path=\"/css-snippets\" component={LandingComponent} exact />\r\n    <Route path=\"/css-snippets/gradient-colors\" component={ColorCards} />\r\n    <Route path=\"/css-snippets/css-tricks\" exact component={CSSTricks} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import \"./App.css\";\r\nimport Footer from \"./components/footer/footer.component\";\r\nimport Header from \"./components/header/header.component\";\r\nimport Routes from \"./routes/Routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Routes />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore } from \"redux\";\r\n\r\nconst { default: rootReducer } = require(\"./root.reducer\");\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}